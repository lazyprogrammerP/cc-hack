// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: doctor.sql

package sqlc

import (
	"context"
	"encoding/json"
)

const createDoctor = `-- name: CreateDoctor :one
INSERT INTO
    public.doctor (name, background, education_details, experience, fees, department_id)
VALUES
    ($1, $2, $3, $4, $5, $6)
RETURNING
    id, name, background, education_details, experience, fees, department_id
`

type CreateDoctorParams struct {
	Name             string
	Background       string
	EducationDetails string
	Experience       int16
	Fees             int32
	DepartmentID     int32
}

func (q *Queries) CreateDoctor(ctx context.Context, arg CreateDoctorParams) (Doctor, error) {
	row := q.db.QueryRowContext(ctx, createDoctor,
		arg.Name,
		arg.Background,
		arg.EducationDetails,
		arg.Experience,
		arg.Fees,
		arg.DepartmentID,
	)
	var i Doctor
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Background,
		&i.EducationDetails,
		&i.Experience,
		&i.Fees,
		&i.DepartmentID,
	)
	return i, err
}

const getDoctorByID = `-- name: GetDoctorByID :one
SELECT
    d.id,
    d.name,
    d.background,
    d.education_details,
    d.experience,
    d.fees,
    JSON_BUILD_OBJECT('id', dpt.id, 'name', dpt.name) AS department
FROM
    public.doctor d
    LEFT JOIN public.department dpt ON d.department_id = dpt.id
`

type GetDoctorByIDRow struct {
	ID               int32
	Name             string
	Background       string
	EducationDetails string
	Experience       int16
	Fees             int32
	Department       json.RawMessage
}

// SELECT
//
//	d.id,
//	d.name,
//	d.background,
//	d.education_details,
//	d.experience,
//	d.fees,
//	JSON_BUILD_OBJECT('id', dpt.id, 'name', dpt.name) AS department
//
// FROM
//
//	public.doctor d
//	LEFT JOIN public.department dpt ON d.department_id = dpt.id
//
// WHERE
//
//	id = $1;
func (q *Queries) GetDoctorByID(ctx context.Context) (GetDoctorByIDRow, error) {
	row := q.db.QueryRowContext(ctx, getDoctorByID)
	var i GetDoctorByIDRow
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Background,
		&i.EducationDetails,
		&i.Experience,
		&i.Fees,
		&i.Department,
	)
	return i, err
}
